<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <!--Avalonia doesen't support TrimMode=link currently,but we are working on that https://github.com/AvaloniaUI/Avalonia/issues/6892 -->
    <TrimMode>copyused</TrimMode>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <Authors>tylearymf</Authors>
    <Company>tylearymf</Company>
    <Version>3.7</Version>
    <PackageId>com.tylearymf.unihacker</PackageId>
    <PackageProjectUrl>https:/www.github.com/tylearymf/unihacker</PackageProjectUrl>
    <ApplicationIcon>Assets\avalonia-logo.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>
  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
    <AvaloniaXaml Remove="Models\**" />
    <AvaloniaXaml Remove="publish\**" />
    <Compile Remove="Models\**" />
    <Compile Remove="publish\**" />
    <EmbeddedResource Remove="Models\**" />
    <EmbeddedResource Remove="publish\**" />
    <None Remove="Models\**" />
    <None Remove="publish\**" />
    <None Remove=".gitignore" />
    <None Remove="build.bat" />
    <None Remove="LICENSE" />
    <None Remove="README.md" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Assets\avalonia-logo.ico" />
  </ItemGroup>
  <ItemGroup>
    <!--This helps with theme dll-s trimming.
	If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
	https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
    <TrimmableAssembly Include="Avalonia.Themes.Fluent" />
    <TrimmableAssembly Include="Avalonia.Themes.Default" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="0.10.14" />
    <PackageReference Include="Avalonia.AvaloniaEdit" Version="0.10.12.2" />
    <PackageReference Include="Avalonia.Desktop" Version="0.10.14" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.14" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="0.10.14" />
    <PackageReference Include="CliWrap" Version="3.4.4" />
    <PackageReference Include="MessageBox.Avalonia" Version="2.0.0" />
    <PackageReference Include="Mono.Posix.NETStandard" Version="1.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="System.Security.Cryptography.Csp" Version="4.3.0" />
    <PackageReference Include="System.Security.Cryptography.Xml" Version="6.0.1" />
    <PackageReference Include="XamlNameReferenceGenerator" Version="1.3.4" />
  </ItemGroup>
  <ItemGroup>
    <AvaloniaResource Update="Assets\Language_Chinese.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Language_Chinese.resx</DependentUpon>
    </AvaloniaResource>
    <AvaloniaResource Update="Assets\Language_Chinese.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Language_Chinese.Designer.cs</LastGenOutput>
    </AvaloniaResource>
    <AvaloniaResource Update="Assets\Language_English.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Language_English.resx</DependentUpon>
    </AvaloniaResource>
    <AvaloniaResource Update="Assets\Language_English.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Language_English.Designer.cs</LastGenOutput>
    </AvaloniaResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Assets\Language_English.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Language_English.resx</DependentUpon>
    </Compile>
  </ItemGroup>
</Project>
